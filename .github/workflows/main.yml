name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Debug project directory structure
      run: |
        echo "Root directory contents:"
        ls -la
        echo "All subdirectories:"
        find . -type d

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Upgraded to support Playwright 1.52.0+

    - name: Install .NET dependencies
      run: |
        dotnet restore backend/PerformanceManagementApi/PerformanceManagementApi/PerformanceManagementApi.csproj

    - name: Install frontend dependencies
      run: |
        cd frontend/performance-management-client
        npm install

    - name: Install Playwright
      run: |
        cd frontend/performance-management-client
        npm install -g @playwright/test
        npx playwright install

    - name: Run SonarQube Scanner setup
      run: |
        dotnet tool install --global dotnet-sonarscanner
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Run SonarQube analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: sonar-scanner

    - name: Run backend tests (XUnit)
      run: |
        dotnet test backend/PerformanceManagementApi/PerformanceManagementApi/PerformanceManagementApi.csproj

    - name: Run frontend tests (Playwright)
      run: |
        cd frontend/performance-management-client
        npx playwright test
