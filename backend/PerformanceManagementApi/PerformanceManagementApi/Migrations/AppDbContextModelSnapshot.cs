// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerformanceManagementApi.Data;

#nullable disable

namespace PerformanceManagementApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerformanceManagementApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "IT",
                            FullName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Department = "HR",
                            FullName = "Jane Smith"
                        });
                });

            modelBuilder.Entity("PerformanceManagementApi.Models.PerformanceGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("GoalTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PerformanceGoals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Build REST API",
                            DueDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            GoalTitle = "Complete API",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Write unit tests",
                            DueDate = new DateTime(2025, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            GoalTitle = "Unit Tests",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Create onboarding plan",
                            DueDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            GoalTitle = "Onboarding",
                            Status = 0
                        });
                });

            modelBuilder.Entity("PerformanceManagementApi.Models.PerformanceGoal", b =>
                {
                    b.HasOne("PerformanceManagementApi.Models.Employee", "Employee")
                        .WithMany("PerformanceGoals")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PerformanceManagementApi.Models.Employee", b =>
                {
                    b.Navigation("PerformanceGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
